<Application
	x:Class="TRX.App"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:fw="clr-namespace:SourceChord.FluentWPF;assembly=FluentWPF"
	xmlns:local="clr-namespace:TRX"
	StartupUri="MainWindow.xaml">
	<Application.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary
					Source="pack://application:,,,/FluentWPF;component/Styles/Controls.xaml" />
			</ResourceDictionary.MergedDictionaries>
			<Style
				x:Key="{x:Type ToolTip}"
				TargetType="{x:Type ToolTip}">
				<Setter
					Property="Foreground"
					Value="#FFFFFFFF" />
				<Setter
					Property="Background"
					Value="#7F181818" />
				<Setter
					Property="BorderBrush"
					Value="#FF2B2B2B" />
				<Setter
					Property="Padding"
					Value="5 3 5 5" />
				<Setter
					Property="FontSize"
					Value="13" />
				<Setter
					Property="FontWeight"
					Value="Medium" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type ToolTip}">
							<Border
								Background="{TemplateBinding Control.Background}"
								BorderBrush="{TemplateBinding Control.BorderBrush}"
								BorderThickness="1">
								<StackPanel>
									<ContentPresenter
										HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
										Margin="{TemplateBinding Control.Padding}"
										Focusable="False"
										RecognizesAccessKey="True" />
								</StackPanel>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<SolidColorBrush
				x:Key="Button.Static.Background"
				Color="#00ffffff" />
			<SolidColorBrush
				x:Key="Button.MouseOver.Background"
				Color="#40ffffff" />
			<SolidColorBrush
				x:Key="Button.Pressed.Background"
				Color="#00DDDDDD" />
			<SolidColorBrush
				x:Key="Button.Disabled.Background"
				Color="#00DDDDDD" />
			<SolidColorBrush
				x:Key="TabItem.Static.Background"
				Color="Transparent" />
			<SolidColorBrush
				x:Key="TabItem.MouseOver.Background"
				Color="#00DDDDDD" />
			<SolidColorBrush
				x:Key="TabItem.Selected.Background"
				Color="#00DDDDDD" />
			<Style
				x:Key="TabsButton"
				TargetType="{x:Type Button}">
				<Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{x:Null}" />
				<Setter
					Property="Background"
					Value="{StaticResource Button.Static.Background}" />
				<Setter
					Property="Foreground"
					Value="#FFFFFFFF" />
				<Setter
					Property="BorderThickness"
					Value="1" />
				<Setter
					Property="HorizontalContentAlignment"
					Value="Center" />
				<Setter
					Property="VerticalContentAlignment"
					Value="Center" />
				<Setter
					Property="Padding"
					Value="6 1" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type Button}">
							<Border
								Name="border"
								Background="{TemplateBinding Control.Background}"
								SnapsToDevicePixels="True"
								CornerRadius="1">
								<ContentPresenter
									Name="contentPresenter"
									Focusable="False"
									HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
									Margin="{TemplateBinding Control.Padding}"
									RecognizesAccessKey="True"
									SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
									VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
							</Border>
							<ControlTemplate.Triggers>
								<Trigger
									Property="UIElement.IsMouseOver"
									Value="True">
									<TriggerBase.EnterActions>
										<BeginStoryboard>
											<Storyboard>
												<ColorAnimation
													AutoReverse="False"
													Storyboard.TargetProperty="(Background).Color"
													Duration="0:0:0.10"
													To="#40ffffff" />
											</Storyboard>
										</BeginStoryboard>
									</TriggerBase.EnterActions>
									<TriggerBase.ExitActions>
										<BeginStoryboard>
											<Storyboard>
												<ColorAnimation
													AutoReverse="False"
													Storyboard.TargetProperty="(Background).Color"
													Duration="0:0:0.10" />
											</Storyboard>
										</BeginStoryboard>
									</TriggerBase.ExitActions>
								</Trigger>
								<Trigger
									Property="IsPressed"
									Value="True">
									<Setter
										TargetName="border"
										Property="Border.Background"
										Value="#00DDDDDD" />
								</Trigger>
								<Trigger
									Property="IsEnabled"
									Value="False">
									<Setter
										TargetName="border"
										Property="Border.Background"
										Value="{StaticResource Button.Disabled.Background}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				x:Key="Tabs"
				TargetType="{x:Type TabControl}">
				<Setter
					Property="Padding"
					Value="2" />
				<Setter
					Property="HorizontalContentAlignment"
					Value="Center" />
				<Setter
					Property="VerticalContentAlignment"
					Value="Center" />
				<Setter
					Property="Background"
					Value="{StaticResource TabItem.Selected.Background}" />
				<Setter
					Property="BorderThickness"
					Value="0" />
				<Setter
					Property="Foreground"
					Value="{DynamicResource SystemColors.ControlTextBrushKey}" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type TabControl}">
							<Grid
								Name="templateRoot"
								ClipToBounds="True"
								SnapsToDevicePixels="True"
								KeyboardNavigation.TabNavigation="Local">
								<Grid.ColumnDefinitions>
									<ColumnDefinition
										x:Name="ColumnDefinition0" />
									<ColumnDefinition
										x:Name="ColumnDefinition1"
										Width="0" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition
										x:Name="RowDefinition0"
										Height="Auto" />
									<RowDefinition
										x:Name="RowDefinition1"
										Height="*" />
								</Grid.RowDefinitions>
								<ScrollViewer
									Name="TabScrollViewer"
									VerticalScrollBarVisibility="Disabled"
									Background="#00FFFFFF"
									HorizontalScrollBarVisibility="Hidden"
									ClipToBounds="True"
									Grid.ColumnSpan="2"
									Margin="2,0,-2,0">
									<StackPanel
										Orientation="Horizontal">
										<TabPanel
											Name="headerPanel"
											Background="#00FFFFFF"
											Opacity="0.7"
											IsItemsHost="True"
											KeyboardNavigation.TabIndex="1"
											ZIndex="1"
											Margin="0 2 0 0" />
										<Button
											Name="AddTabButton"
											Width="15"
											Height="15"
											Margin="4"
											Padding="0"
											Style="{StaticResource TabsButton}">
											<Grid>
												<Path
													Stroke="#FFFFFFFF"
													StrokeThickness="1"
													Data="M0,4.5 L9,4.5" />
												<Path
													Stroke="#FFFFFFFF"
													StrokeThickness="1"
													Data="M4.5,0 L4.5,9" />
											</Grid>
										</Button>
									</StackPanel>
								</ScrollViewer>
								<Border
									Name="contentPanel"
									BorderBrush="{TemplateBinding Control.BorderBrush}"
									BorderThickness="{TemplateBinding Control.BorderThickness}"
									Background="{TemplateBinding Control.Background}"
									Grid.Column="0"
									KeyboardNavigation.DirectionalNavigation="Contained"
									Grid.Row="1"
									KeyboardNavigation.TabIndex="2"
									KeyboardNavigation.TabNavigation="Local">
									<ContentPresenter
										Name="PART_SelectedContentHost"
										ContentSource="SelectedContent"
										Margin="{TemplateBinding Control.Padding}"
										SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
								</Border>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				x:Key="Tab"
				TargetType="{x:Type TabItem}">
				<Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{x:Null}" />
				<Setter
					Property="Foreground"
					Value="#FFFFFFFF" />
				<Setter
					Property="Background"
					Value="{StaticResource TabItem.Static.Background}" />
				<Setter
					Property="Margin"
					Value="0" />
				<Setter
					Property="Padding"
					Value="6,2,6,2" />
				<Setter
					Property="HorizontalContentAlignment"
					Value="Stretch" />
				<Setter
					Property="VerticalContentAlignment"
					Value="Stretch" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type TabItem}">
							<Grid
								Name="templateRoot"
								SnapsToDevicePixels="True"
								Background="#181818">
								<Border
									Name="mainBorder"
									BorderBrush="#FF2B2B2B"
									CornerRadius="0"
									BorderThickness="1"
									Background="{TemplateBinding Control.Background}"
									Margin="0" />
								<StackPanel
									Orientation="Horizontal">
									<ContentPresenter
										Name="contentPresenter"
										ContentSource="Header"
										Focusable="False"
										Margin="{TemplateBinding Control.Padding}"
										RecognizesAccessKey="True"
										SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
										HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
										VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
									<Button
										Name="CloseButton"
										Margin="-3 3 3 3"
										Padding="0"
										Height="13"
										Width="13"
										Style="{StaticResource TabsButton}">
										<Grid>
											<Path
												Stroke="#FFFFFFFF"
												StrokeThickness="1"
												Data="M0,0 L5,5" />
											<Path
												Stroke="#FFFFFFFF"
												StrokeThickness="1"
												Data="M0,5 L5,0" />
										</Grid>
									</Button>
								</StackPanel>
							</Grid>
							<ControlTemplate.Triggers>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition
											Value="true"
											Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" />
										<Condition
											Value="false"
											Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
										<Condition
											Value="Top"
											Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
									</MultiDataTrigger.Conditions>
									<Setter
										TargetName="mainBorder"
										Property="Border.Background"
										Value="{StaticResource TabItem.MouseOver.Background}" />
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition
											Value="true"
											Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
										<Condition
											Value="Top"
											Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
									</MultiDataTrigger.Conditions>
									<Setter
										Property="Panel.ZIndex"
										Value="1" />
									<Setter
										TargetName="mainBorder"
										Property="Border.Background"
										Value="#FF0F0F0F" />
									<Setter
										TargetName="mainBorder"
										Property="Border.BorderBrush"
										Value="#FF212121" />
								</MultiDataTrigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				x:Key="InvisibleTextBox"
				TargetType="{x:Type TextBox}">
				<Setter
					Property="Background"
					Value="#00FFFFFF" />
				<Setter
					Property="BorderBrush"
					Value="#00FFFFFF" />
				<Setter
					Property="FrameworkElement.ContextMenu"
					Value="{x:Null}" />
				<Setter
					Property="TextBoxBase.CaretBrush"
					Value="#FFFFFFFF" />
				<Setter
					Property="Foreground"
					Value="#FFFFFFFF" />
				<Setter
					Property="BorderThickness"
					Value="0" />
				<Setter
					Property="KeyboardNavigation.TabNavigation"
					Value="None" />
				<Setter
					Property="HorizontalContentAlignment"
					Value="Left" />
				<Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{x:Null}" />
				<Setter
					Property="UIElement.AllowDrop"
					Value="True" />
				<Setter
					Property="ScrollViewer.PanningMode"
					Value="VerticalFirst" />
				<Setter
					Property="Stylus.IsFlicksEnabled"
					Value="False" />
				<Setter
					Property="Padding"
					Value="0" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type TextBox}">
							<Border
								Name="border"
								BorderBrush="{TemplateBinding Control.BorderBrush}"
								BorderThickness="{TemplateBinding Control.BorderThickness}"
								Background="{TemplateBinding Control.Background}"
								SnapsToDevicePixels="True">
								<ScrollViewer
									Name="PART_ContentHost"
									Focusable="False"
									HorizontalScrollBarVisibility="Hidden"
									VerticalScrollBarVisibility="Hidden" />
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition
								Property="TextBoxBase.IsInactiveSelectionHighlightEnabled"
								Value="True" />
							<Condition
								Property="TextBoxBase.IsSelectionActive"
								Value="False" />
						</MultiTrigger.Conditions>
						<Setter
							Property="TextBoxBase.SelectionBrush"
							Value="{DynamicResource SystemColors.InactiveSelectionHighlightBrushKey}" />
					</MultiTrigger>
				</Style.Triggers>
			</Style>
			<SolidColorBrush
				x:Key="ScrollBar.Static.Background"
				Color="Transparent" />
			<SolidColorBrush
				x:Key="ScrollBar.Pressed.Glyph"
				Color="#CCFFFFFF" />
			<SolidColorBrush
				x:Key="ScrollBar.MouseOver.Glyph"
				Color="#CCA0A0A0" />
			<SolidColorBrush
				x:Key="ScrollBar.Disabled.Glyph"
				Color="#CC404040" />
			<SolidColorBrush
				x:Key="ScrollBar.Static.Glyph"
				Color="#CC808080" />
			<SolidColorBrush
				x:Key="ScrollBar.MouseOver.Background"
				Color="#303030" />
			<SolidColorBrush
				x:Key="ScrollBar.Pressed.Background"
				Color="#404040" />
			<SolidColorBrush
				x:Key="ScrollBar.Disabled.Background"
				Color="#FF191919" />
			<SolidColorBrush
				x:Key="ScrollBar.Static.Thumb"
				Color="#60ffffff" />
			<SolidColorBrush
				x:Key="ScrollBar.MouseOver.Thumb"
				Color="#70ffffff" />
			<SolidColorBrush
				x:Key="ScrollBar.Pressed.Thumb"
				Color="#80ffffff" />
			<Style
				x:Key="ScrollBarButton"
				TargetType="{x:Type RepeatButton}">
				<Setter
					Property="HorizontalContentAlignment"
					Value="Center" />
				<Setter
					Property="VerticalContentAlignment"
					Value="Center" />
				<Setter
					Property="Padding"
					Value="1" />
				<Setter
					Property="Focusable"
					Value="False" />
				<Setter
					Property="IsTabStop"
					Value="False" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type RepeatButton}">
							<Border
								Name="border"
								SnapsToDevicePixels="True"
								Background="{StaticResource ScrollBar.Static.Background}">
								<ContentPresenter
									Name="contentPresenter"
									Focusable="False"
									HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
									Margin="{TemplateBinding Control.Padding}"
									SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
									VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
							</Border>
							<ControlTemplate.Triggers>
								<Trigger
									Property="UIElement.IsMouseOver"
									Value="True">
									<Setter
										TargetName="border"
										Property="Border.Background"
										Value="{StaticResource ScrollBar.MouseOver.Background}" />
								</Trigger>
								<Trigger
									Property="IsPressed"
									Value="True">
									<Setter
										TargetName="border"
										Property="Border.Background"
										Value="{StaticResource ScrollBar.Pressed.Background}" />
								</Trigger>
								<Trigger
									Property="IsEnabled"
									Value="False">
									<Setter
										TargetName="contentPresenter"
										Property="UIElement.Opacity"
										Value="0.56" />
									<Setter
										TargetName="border"
										Property="Border.Background"
										Value="{StaticResource ScrollBar.Disabled.Background}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				x:Key="RepeatButtonTransparent"
				TargetType="{x:Type RepeatButton}">
				<Setter
					Property="FrameworkElement.OverridesDefaultStyle"
					Value="True" />
				<Setter
					Property="Background"
					Value="#00FFFFFF" />
				<Setter
					Property="Focusable"
					Value="False" />
				<Setter
					Property="IsTabStop"
					Value="False" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type RepeatButton}">
							<Rectangle
								Fill="{TemplateBinding Control.Background}"
								Height="{TemplateBinding FrameworkElement.Height}"
								Width="{TemplateBinding FrameworkElement.Width}" />
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				x:Key="ScrollBarThumbVertical"
				TargetType="{x:Type Thumb}">
				<Setter
					Property="FrameworkElement.OverridesDefaultStyle"
					Value="True" />
				<Setter
					Property="IsTabStop"
					Value="False" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type Thumb}">
							<Border
								Name="rectangle"
								CornerRadius="1"
								Height="{TemplateBinding FrameworkElement.Height}"
								SnapsToDevicePixels="True"
								Width="{TemplateBinding FrameworkElement.Width}"
								Background="{StaticResource ScrollBar.Static.Thumb}" />
							<ControlTemplate.Triggers>
								<Trigger
									Property="UIElement.IsMouseOver"
									Value="True">
									<Setter
										TargetName="rectangle"
										Property="Border.Background"
										Value="{StaticResource ScrollBar.MouseOver.Thumb}" />
								</Trigger>
								<Trigger
									Property="Thumb.IsDragging"
									Value="True">
									<Setter
										TargetName="rectangle"
										Property="Border.Background"
										Value="{StaticResource ScrollBar.Pressed.Thumb}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				x:Key="ScrollBarThumbHorizontal"
				TargetType="{x:Type Thumb}">
				<Setter
					Property="FrameworkElement.OverridesDefaultStyle"
					Value="True" />
				<Setter
					Property="IsTabStop"
					Value="False" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type Thumb}">
							<Border
								Name="rectangle"
								CornerRadius="1"
								Height="{TemplateBinding FrameworkElement.Height}"
								SnapsToDevicePixels="True"
								Width="{TemplateBinding FrameworkElement.Width}"
								Background="{StaticResource ScrollBar.Static.Thumb}" />
							<ControlTemplate.Triggers>
								<Trigger
									Property="UIElement.IsMouseOver"
									Value="True">
									<Setter
										TargetName="rectangle"
										Property="Border.Background"
										Value="{StaticResource ScrollBar.MouseOver.Thumb}" />
								</Trigger>
								<Trigger
									Property="Thumb.IsDragging"
									Value="True">
									<Setter
										TargetName="rectangle"
										Property="Border.Background"
										Value="{StaticResource ScrollBar.Pressed.Thumb}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				x:Key="{x:Type ScrollBar}"
				TargetType="{x:Type ScrollBar}">
				<Setter
					Property="Stylus.IsPressAndHoldEnabled"
					Value="False" />
				<Setter
					Property="Stylus.IsFlicksEnabled"
					Value="False" />
				<Setter
					Property="Background"
					Value="{StaticResource ScrollBar.Static.Background}" />
				<Setter
					Property="Foreground"
					Value="{DynamicResource SystemColors.ControlTextBrushKey}" />
				<Setter
					Property="Width"
					Value="8" />
				<Setter
					Property="MinWidth"
					Value="8" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type ScrollBar}">
							<Grid
								Name="Bg"
								SnapsToDevicePixels="True">
								<Grid.RowDefinitions>
									<RowDefinition
										Height="0.00001*" />
								</Grid.RowDefinitions>
								<Border
									Background="{TemplateBinding Control.Background}"
									Grid.Row="0" />
								<Track
									Name="PART_Track"
									IsDirectionReversed="True"
									IsEnabled="{TemplateBinding UIElement.IsMouseOver}"
									Grid.Row="0">
									<Track.DecreaseRepeatButton>
										<RepeatButton
											Command="{x:Static ScrollBar.PageUpCommand}"
											Style="{StaticResource RepeatButtonTransparent}" />
									</Track.DecreaseRepeatButton>
									<Track.IncreaseRepeatButton>
										<RepeatButton
											Command="{x:Static ScrollBar.PageDownCommand}"
											Style="{StaticResource RepeatButtonTransparent}" />
									</Track.IncreaseRepeatButton>
									<Track.Thumb>
										<Thumb
											Style="{StaticResource ScrollBarThumbVertical}" />
									</Track.Thumb>
								</Track>
							</Grid>
							<ControlTemplate.Triggers>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition
											Value="true"
											Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" />
										<Condition
											Value="true"
											Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" />
									</MultiDataTrigger.Conditions>
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition
											Value="true"
											Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" />
										<Condition
											Value="true"
											Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" />
									</MultiDataTrigger.Conditions>
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition
											Value="true"
											Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" />
										<Condition
											Value="false"
											Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" />
									</MultiDataTrigger.Conditions>
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition
											Value="true"
											Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" />
										<Condition
											Value="false"
											Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" />
									</MultiDataTrigger.Conditions>
								</MultiDataTrigger>
								<Trigger
									Property="IsEnabled"
									Value="False" />
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<Trigger
						Property="ScrollBar.Orientation"
						Value="Horizontal">
						<Setter
							Property="Width"
							Value="Auto" />
						<Setter
							Property="MinWidth"
							Value="0" />
						<Setter
							Property="Height"
							Value="8" />
						<Setter
							Property="MinHeight"
							Value="8" />
						<Setter
							Property="Template">
							<Setter.Value>
								<ControlTemplate
									TargetType="{x:Type ScrollBar}">
									<Grid
										Name="Bg"
										SnapsToDevicePixels="True">
										<Grid.ColumnDefinitions>
											<ColumnDefinition
												Width="0.00001*" />
										</Grid.ColumnDefinitions>
										<Border
											Background="{TemplateBinding Control.Background}"
											Grid.Column="0" />
										<Track
											Name="PART_Track"
											Grid.Column="0"
											IsEnabled="{TemplateBinding UIElement.IsMouseOver}">
											<Track.DecreaseRepeatButton>
												<RepeatButton
													Command="{x:Static ScrollBar.PageLeftCommand}"
													Style="{StaticResource RepeatButtonTransparent}" />
											</Track.DecreaseRepeatButton>
											<Track.IncreaseRepeatButton>
												<RepeatButton
													Command="{x:Static ScrollBar.PageRightCommand}"
													Style="{StaticResource RepeatButtonTransparent}" />
											</Track.IncreaseRepeatButton>
											<Track.Thumb>
												<Thumb
													Style="{StaticResource ScrollBarThumbHorizontal}" />
											</Track.Thumb>
										</Track>
									</Grid>
									<ControlTemplate.Triggers>
										<MultiDataTrigger>
											<MultiDataTrigger.Conditions>
												<Condition
													Value="true"
													Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" />
												<Condition
													Value="true"
													Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" />
											</MultiDataTrigger.Conditions>
										</MultiDataTrigger>
										<MultiDataTrigger>
											<MultiDataTrigger.Conditions>
												<Condition
													Value="true"
													Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" />
												<Condition
													Value="true"
													Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" />
											</MultiDataTrigger.Conditions>
										</MultiDataTrigger>
										<MultiDataTrigger>
											<MultiDataTrigger.Conditions>
												<Condition
													Value="true"
													Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" />
												<Condition
													Value="false"
													Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" />
											</MultiDataTrigger.Conditions>
										</MultiDataTrigger>
										<MultiDataTrigger>
											<MultiDataTrigger.Conditions>
												<Condition
													Value="true"
													Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" />
												<Condition
													Value="false"
													Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" />
											</MultiDataTrigger.Conditions>
										</MultiDataTrigger>
										<Trigger
											Property="IsEnabled"
											Value="False" />
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Trigger>
				</Style.Triggers>
			</Style>
			<Style
				x:Key="{x:Type ScrollViewer}"
				TargetType="{x:Type ScrollViewer}">
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type ScrollViewer}">
							<Grid
								Name="Grid"
								Background="{TemplateBinding Control.Background}">
								<Grid.ColumnDefinitions>
									<ColumnDefinition
										Width="*" />
									<ColumnDefinition
										Width="Auto" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition
										Height="*" />
									<RowDefinition
										Height="Auto" />
								</Grid.RowDefinitions>
								<Rectangle
									Name="Corner"
									Grid.Column="1"
									Grid.Row="1"
									Fill="{StaticResource ScrollBar.Static.Background}" />
								<ScrollContentPresenter
									Name="PART_ScrollContentPresenter"
									CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
									CanHorizontallyScroll="False"
									CanVerticallyScroll="False"
									ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
									Content="{TemplateBinding ContentControl.Content}"
									Grid.Column="0"
									Margin="{TemplateBinding Control.Padding}"
									Grid.Row="0" />
								<ScrollBar
									Name="PART_VerticalScrollBar"
									AutomationProperties.AutomationId="VerticalScrollBar"
									Cursor="Arrow"
									Grid.Column="1"
									Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}"
									Minimum="0"
									Grid.Row="0"
									Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}"
									ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}"
									Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
								<ScrollBar
									Name="PART_HorizontalScrollBar"
									AutomationProperties.AutomationId="HorizontalScrollBar"
									Cursor="Arrow"
									Grid.Column="0"
									Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}"
									Minimum="0"
									Orientation="Horizontal"
									Grid.Row="1"
									Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}"
									ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}"
									Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
	</Application.Resources>
</Application>
